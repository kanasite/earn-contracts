{
  "address": "0x37F69DB40F5a306fBFB9E4edC8b6b92c86236db7",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_money",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_commission",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Cancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newCommission",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldCommission",
          "type": "uint256"
        }
      ],
      "name": "CommissionChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        }
      ],
      "name": "Completed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "Created",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "PriceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "bid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "changePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "commission",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "enum ItemType",
              "name": "itemType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct Item",
          "name": "_item",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "create",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "money",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numOffers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "offers",
      "outputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum ItemType",
              "name": "itemType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct Item",
          "name": "item",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "commission",
          "type": "uint256"
        },
        {
          "internalType": "enum FixedPriceMarket.OfferStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_commission",
          "type": "uint256"
        }
      ],
      "name": "setComission",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x546fedf8ab231254b98e8c151f4374190b9e4e2143283ff40762ce6daa1cfc8a",
  "receipt": {
    "to": null,
    "from": "0x0B1f506d4A9C0b1091bCAd24567C08fdCcaD2B64",
    "contractAddress": "0x37F69DB40F5a306fBFB9E4edC8b6b92c86236db7",
    "transactionIndex": 17,
    "gasUsed": "1933657",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000800000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000020000000000000000000800000000000100000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080220000000000000000000000000000000000000000000000080000000000000000000",
    "blockHash": "0x6403ccbf90eaad8255b0caa7fa3172c8c03d580c95c2c5c32d9e35e6cddd4e28",
    "transactionHash": "0x546fedf8ab231254b98e8c151f4374190b9e4e2143283ff40762ce6daa1cfc8a",
    "logs": [
      {
        "transactionIndex": 17,
        "blockNumber": 26537965,
        "transactionHash": "0x546fedf8ab231254b98e8c151f4374190b9e4e2143283ff40762ce6daa1cfc8a",
        "address": "0x37F69DB40F5a306fBFB9E4edC8b6b92c86236db7",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000b1f506d4a9c0b1091bcad24567c08fdccad2b64"
        ],
        "data": "0x",
        "logIndex": 71,
        "blockHash": "0x6403ccbf90eaad8255b0caa7fa3172c8c03d580c95c2c5c32d9e35e6cddd4e28"
      }
    ],
    "blockNumber": 26537965,
    "cumulativeGasUsed": "8659728",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x72Cb10C6bfA5624dD07Ef608027E366bd690048F",
    250
  ],
  "numDeployments": 5,
  "solcInputHash": "4dab09d7342c9fed59147d6d2814b8b3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_money\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_commission\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Cancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCommission\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldCommission\",\"type\":\"uint256\"}],\"name\":\"CommissionChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"}],\"name\":\"Completed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"Created\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"PriceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"bid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"changePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commission\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"internalType\":\"struct Item\",\"name\":\"_item\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"money\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numOffers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"offers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"internalType\":\"struct Item\",\"name\":\"item\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"internalType\":\"enum FixedPriceMarket.OfferStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_commission\",\"type\":\"uint256\"}],\"name\":\"setComission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FixedPriceMarket.sol\":\"FixedPriceMarket\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/utils/ERC1155Holder.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ERC1155Receiver.sol\\\";\\n\\n/**\\n * Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens.\\n *\\n * IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\\n * stuck.\\n *\\n * @dev _Available since v3.1._\\n */\\ncontract ERC1155Holder is ERC1155Receiver {\\n    function onERC1155Received(\\n        address,\\n        address,\\n        uint256,\\n        uint256,\\n        bytes memory\\n    ) public virtual override returns (bytes4) {\\n        return this.onERC1155Received.selector;\\n    }\\n\\n    function onERC1155BatchReceived(\\n        address,\\n        address,\\n        uint256[] memory,\\n        uint256[] memory,\\n        bytes memory\\n    ) public virtual override returns (bytes4) {\\n        return this.onERC1155BatchReceived.selector;\\n    }\\n}\\n\",\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/utils/ERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155Receiver.sol\\\";\\nimport \\\"../../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\nabstract contract ERC1155Receiver is ERC165, IERC1155Receiver {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n}\\n\",\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/utils/ERC721Holder.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721Receiver.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC721Receiver} interface.\\n *\\n * Accepts all token transfers.\\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\\n */\\ncontract ERC721Holder is IERC721Receiver {\\n    /**\\n     * @dev See {IERC721Receiver-onERC721Received}.\\n     *\\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address,\\n        address,\\n        uint256,\\n        bytes memory\\n    ) public virtual override returns (bytes4) {\\n        return this.onERC721Received.selector;\\n    }\\n}\\n\",\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/FixedPriceMarket.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Market.sol\\\";\\n\\ncontract FixedPriceMarket is Market {\\n    enum OfferStatus { None, Created, Cancelled, Completed }\\n    struct Offer {\\n        address creator;\\n        address bidder;\\n        Item item;\\n        uint price;\\n        uint commission;    // in bps\\n        OfferStatus status;\\n    }\\n\\n    event Created(uint indexed id, address indexed creator);\\n    event PriceChanged(uint indexed id);\\n    event Cancelled(uint indexed id);\\n    event Completed(uint indexed id, address bidder);\\n\\n    uint public numOffers;\\n    mapping(uint => Offer) public offers;\\n\\n    constructor(address _money, uint _commission) Market(_money, _commission) {}\\n\\n    function create(\\n        Item calldata _item,\\n        uint _price\\n    )\\n        external\\n        whenNotPaused\\n        returns (uint id)\\n    {\\n        require(_price > 0, \\\"Market: zero price\\\");\\n        address creator = msg.sender;\\n        transferItem(creator, address(this), _item);\\n        id = ++numOffers;\\n        offers[id] = Offer({\\n            creator: creator,\\n            bidder: address(0),\\n            item: _item,\\n            price: _price,\\n            commission: commission,\\n            status: OfferStatus.Created\\n        });\\n        emit Created(id, creator);\\n    }\\n\\n    function cancel(uint _id) external {\\n        address creator = msg.sender;\\n        Offer memory offer = offers[_id];\\n        require(offer.status == OfferStatus.Created, \\\"Market: invalid offer status\\\");\\n        require(offer.creator == creator, \\\"Market: not creator\\\");\\n        transferItem(address(this), creator, offer.item);\\n        offers[_id].status = OfferStatus.Cancelled;\\n        emit Cancelled(_id);\\n    }\\n\\n    function bid(uint _id) external {\\n        Offer memory offer = offers[_id];\\n        require(offer.status == OfferStatus.Created, \\\"Market: invalid offer status\\\");\\n        address bidder = msg.sender;\\n        uint fee = offer.price * offer.commission / 10000;\\n        transferMoney(bidder, owner(), fee);\\n        transferMoney(bidder, offer.creator, offer.price - fee);\\n        transferItem(address(this), bidder, offer.item);\\n        offers[_id].bidder = bidder;\\n        offers[_id].status = OfferStatus.Completed;\\n        emit Completed(_id, bidder);\\n    }\\n\\n    function changePrice(uint _id, uint _price) external {\\n        require(_price > 0, \\\"Market: zero price\\\");\\n        address creator = msg.sender;\\n        Offer memory offer = offers[_id];\\n        require(offer.status == OfferStatus.Created, \\\"Market: invalid offer status\\\");\\n        require(offer.creator == creator, \\\"Market: not creator\\\");\\n        offers[_id].price = _price;\\n        emit PriceChanged(_id);\\n    }\\n}\\n\",\"keccak256\":\"0x790efb94c0ab483076ac73cc09186cdc81cecee74a02d78e10430c788fc0e2fd\",\"license\":\"MIT\"},\"contracts/Market.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\n\\nenum ItemType { ERC20, ERC721, ERC1155 }\\nstruct Item {\\n    ItemType itemType;\\n    address addr;\\n    uint[] amounts;\\n    uint[] ids;\\n}\\n\\ncontract Market is Ownable, Pausable, ERC721Holder, ERC1155Holder {\\n    using SafeERC20 for IERC20;\\n\\n    IERC20 public immutable money;\\n\\n    uint public commission; // in bps\\n\\n    event CommissionChanged(uint newCommission, uint oldCommission);\\n\\n    constructor(address _money, uint _commission) {\\n        money = IERC20(_money);\\n        commission = _commission;\\n    }\\n\\n    function setComission(uint _commission) external onlyOwner {\\n        uint oldCommission = commission;\\n        commission = _commission;\\n        emit CommissionChanged(commission, oldCommission);\\n    }\\n\\n    function pause() external onlyOwner {\\n        _pause();\\n    }\\n\\n    function unpause() external onlyOwner {\\n        _unpause();\\n    }\\n\\n    function transferItem(address _from, address _to, Item memory _item) internal {\\n        if (_item.itemType == ItemType.ERC721) {\\n            require(_item.ids.length > 0, \\\"Market: zero ids.length\\\");\\n            for (uint i = 0; i < _item.ids.length; i++) {\\n                IERC721(_item.addr).safeTransferFrom(_from, _to, _item.ids[i]);\\n            }\\n        } else if (_item.itemType == ItemType.ERC1155) {\\n            require(_item.ids.length > 0, \\\"Market: zero ids.length\\\");\\n            require(\\n                _item.ids.length == _item.amounts.length,\\n                \\\"Market: ids.length and amounts.length are not equal\\\"\\n            );\\n            for (uint i = 0; i < _item.ids.length; i++) {\\n                require(_item.amounts[i] > 0, \\\"Market: zero amount\\\");\\n                IERC1155(_item.addr).safeTransferFrom(_from, _to, _item.ids[i], _item.amounts[i], \\\"\\\");\\n            }\\n        } else if (_item.itemType == ItemType.ERC20) {\\n            require(_item.amounts.length > 0, \\\"Market: zero amounts.length\\\");\\n            require(_item.amounts[0] > 0, \\\"Market: zero amount\\\");\\n            safeTransferERC20(_item.addr, _from, _to, _item.amounts[0]);\\n        } else {\\n            revert(\\\"Market: unsupported itemType\\\");\\n        }\\n    }\\n\\n    function transferMoney(address _from, address _to, uint _amount) internal {\\n        safeTransferERC20(address(money), _from, _to, _amount);\\n    }\\n\\n    function safeTransferERC20(\\n        address _token,\\n        address _from,\\n        address _to,\\n        uint _amount\\n    )\\n        private\\n    {\\n        if (_from == address(this)) {\\n            IERC20(_token).safeTransfer(_to, _amount);\\n        } else {\\n            IERC20(_token).safeTransferFrom(_from, _to, _amount);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x674e6aeef28f9142c9d892ac1d8ec3ea68e25f709d74a3085615cd9f4b51edc0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b5060405162002244380380620022448339810160408190526200003491620000bd565b818162000041336200006d565b6000805460ff60a01b1916905560609190911b6001600160601b03191660805260015550620000f99050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060408385031215620000d157600080fd5b82516001600160a01b0381168114620000e957600080fd5b6020939093015192949293505050565b60805160601c6121256200011f600039600081816101ee015261157101526121256000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063bc197c8111610071578063bc197c8114610293578063cc6bee54146102b2578063e1489191146102bb578063f23a6e61146102c4578063f2fde38b146102e357600080fd5b8063715018a61461023a5780638456cb59146102425780638a72ea6a1461024a5780638da5cb5b1461026f578063b3de019c1461028057600080fd5b80633f4ba83a116100f45780633f4ba83a146101bb57806340e58ee5146101c3578063454a2ab3146101d65780634ddd108a146101e95780635c975abb1461022857600080fd5b806301ffc9a7146101265780630be80f391461014e578063150b7a021461016357806317e66c351461019a575b600080fd5b610139610134366004611cc5565b6102f6565b60405190151581526020015b60405180910390f35b61016161015c366004611d39565b61032d565b005b610181610171366004611bd6565b630a85bd0160e11b949350505050565b6040516001600160e01b03199091168152602001610145565b6101ad6101a8366004611cef565b6103a5565b604051908152602001610145565b610161610602565b6101616101d1366004611d39565b610636565b6101616101e4366004611d39565b6108a0565b6102107f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610145565b600054600160a01b900460ff16610139565b610161610b42565b610161610b76565b61025d610258366004611d39565b610ba8565b60405161014596959493929190611ddf565b6000546001600160a01b0316610210565b61016161028e366004611d52565b610ce9565b6101816102a1366004611b2c565b63bc197c8160e01b95945050505050565b6101ad60025481565b6101ad60015481565b6101816102d2366004611c3e565b63f23a6e6160e01b95945050505050565b6101616102f1366004611b11565b610f82565b60006001600160e01b03198216630271189760e51b148061032757506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000546001600160a01b031633146103605760405162461bcd60e51b815260040161035790611eaa565b60405180910390fd5b600180549082905560408051838152602081018390527f9b8c4484ba5e4a0dde5339b45a03dd83281d6b1958617ee553dfbcd3532b0e2a910160405180910390a15050565b60008054600160a01b900460ff16156103f35760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610357565b600082116104385760405162461bcd60e51b81526020600482015260126024820152714d61726b65743a207a65726f20707269636560701b6044820152606401610357565b3361044c813061044787611f9f565b61101d565b60026000815461045b9061207c565b91829055506040805160c0810182526001600160a01b038416815260006020820152919350810161048b86611f9f565b81526020018481526020016001548152602001600160038111156104b1576104b16120ad565b9052600083815260036020908152604091829020835181546001600160a01b039182166001600160a01b0319918216178355928501516001808401805492909316919094161790559183015180516002808501805493949093849260ff1990911691908490811115610525576105256120ad565b021790555060208281015182546001600160a01b0390911661010002610100600160a81b031990911617825560408301518051610568926001850192019061199f565b506060820151805161058491600284019160209091019061199f565b505050606082015160058201556080820151600682015560a082015160078201805460ff191660018360038111156105be576105be6120ad565b0217905550506040516001600160a01b038316915083907f7757890bcab34d673dfca6b71df1b57f75a2fe4231d6e8de726caf534ab1fdd690600090a35092915050565b6000546001600160a01b0316331461062c5760405162461bcd60e51b815260040161035790611eaa565b6106346114cf565b565b6000818152600360209081526040808320815160c08101835281546001600160a01b039081168252600183015416938101939093528151608081018352600280830180543397969586019392839160ff1690811115610697576106976120ad565b60028111156106a8576106a86120ad565b8152815461010090046001600160a01b0316602080830191909152600183018054604080518285028101850182528281529401939283018282801561070c57602002820191906000526020600020905b8154815260200190600101908083116106f8575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561076457602002820191906000526020600020905b815481526020019060010190808311610750575b5050509190925250505081526005820154602082015260068201546040820152600782015460609091019060ff1660038111156107a3576107a36120ad565b60038111156107b4576107b46120ad565b905250905060018160a0015160038111156107d1576107d16120ad565b146107ee5760405162461bcd60e51b815260040161035790611edf565b816001600160a01b031681600001516001600160a01b0316146108495760405162461bcd60e51b815260206004820152601360248201527226b0b935b2ba1d103737ba1031b932b0ba37b960691b6044820152606401610357565b6108583083836040015161101d565b600083815260036020526040808220600701805460ff191660021790555184917fc41d93b8bfbf9fd7cf5bfe271fd649ab6a6fec0ea101c23b82a2a28eca2533a991a2505050565b6000818152600360209081526040808320815160c08101835281546001600160a01b0390811682526001830154169381019390935281516080810183526002808301805493948601939091839160ff1690811115610900576109006120ad565b6002811115610911576109116120ad565b8152815461010090046001600160a01b0316602080830191909152600183018054604080518285028101850182528281529401939283018282801561097557602002820191906000526020600020905b815481526020019060010190808311610961575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156109cd57602002820191906000526020600020905b8154815260200190600101908083116109b9575b5050509190925250505081526005820154602082015260068201546040820152600782015460609091019060ff166003811115610a0c57610a0c6120ad565b6003811115610a1d57610a1d6120ad565b905250905060018160a001516003811115610a3a57610a3a6120ad565b14610a575760405162461bcd60e51b815260040161035790611edf565b60808101516060820151339160009161271091610a7391611f69565b610a7d9190611f47565b9050610a9b82610a956000546001600160a01b031690565b8361156c565b610ab9828460000151838660600151610ab49190611f88565b61156c565b610ac83083856040015161101d565b6000848152600360208181526040928390206001810180546001600160a01b0319166001600160a01b0388169081179091556007909101805460ff19169093179092558251918252915186927fa4c87919f856d464ae137e2cb78e129ea90b599d0661f1755dbd7d733af7925a928290030190a250505050565b6000546001600160a01b03163314610b6c5760405162461bcd60e51b815260040161035790611eaa565b6106346000611598565b6000546001600160a01b03163314610ba05760405162461bcd60e51b815260040161035790611eaa565b6106346115e8565b6003602052600090815260409081902080546001820154835160808101909452600280840180546001600160a01b03948516969390941694939091839160ff1690811115610bf857610bf86120ad565b6002811115610c0957610c096120ad565b8152815461010090046001600160a01b03166020808301919091526001830180546040805182850281018501825282815294019392830182828015610c6d57602002820191906000526020600020905b815481526020019060010190808311610c59575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610cc557602002820191906000526020600020905b815481526020019060010190808311610cb1575b50505091909252505050600582015460068301546007909301549192909160ff1686565b60008111610d2e5760405162461bcd60e51b81526020600482015260126024820152714d61726b65743a207a65726f20707269636560701b6044820152606401610357565b6000828152600360209081526040808320815160c08101835281546001600160a01b039081168252600183015416938101939093528151608081018352600280830180543397969586019392839160ff1690811115610d8f57610d8f6120ad565b6002811115610da057610da06120ad565b8152815461010090046001600160a01b03166020808301919091526001830180546040805182850281018501825282815294019392830182828015610e0457602002820191906000526020600020905b815481526020019060010190808311610df0575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610e5c57602002820191906000526020600020905b815481526020019060010190808311610e48575b5050509190925250505081526005820154602082015260068201546040820152600782015460609091019060ff166003811115610e9b57610e9b6120ad565b6003811115610eac57610eac6120ad565b905250905060018160a001516003811115610ec957610ec96120ad565b14610ee65760405162461bcd60e51b815260040161035790611edf565b816001600160a01b031681600001516001600160a01b031614610f415760405162461bcd60e51b815260206004820152601360248201527226b0b935b2ba1d103737ba1031b932b0ba37b960691b6044820152606401610357565b6000848152600360205260408082206005018590555185917fa6dc15bdb68da224c66db4b3838d9a2b205138e8cff6774e57d0af91e196d62291a250505050565b6000546001600160a01b03163314610fac5760405162461bcd60e51b815260040161035790611eaa565b6001600160a01b0381166110115760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610357565b61101a81611598565b50565b600181516002811115611032576110326120ad565b141561114d576000816060015151116110875760405162461bcd60e51b815260206004820152601760248201527609ac2e4d6cae87440f4cae4de40d2c8e65cd8cadccee8d604b1b6044820152606401610357565b60005b8160600151518110156111475781602001516001600160a01b03166342842e0e8585856060015185815181106110c2576110c26120c3565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801561111c57600080fd5b505af1158015611130573d6000803e3d6000fd5b50505050808061113f9061207c565b91505061108a565b50505050565b600281516002811115611162576111626120ad565b1415611380576000816060015151116111b75760405162461bcd60e51b815260206004820152601760248201527609ac2e4d6cae87440f4cae4de40d2c8e65cd8cadccee8d604b1b6044820152606401610357565b8060400151518160600151511461122c5760405162461bcd60e51b815260206004820152603360248201527f4d61726b65743a206964732e6c656e67746820616e6420616d6f756e74732e6c604482015272195b99dd1a08185c99481b9bdd08195c5d585b606a1b6064820152608401610357565b60005b81606001515181101561114757600082604001518281518110611254576112546120c3565b60200260200101511161129f5760405162461bcd60e51b815260206004820152601360248201527213585c9ad95d0e881e995c9bc8185b5bdd5b9d606a1b6044820152606401610357565b81602001516001600160a01b031663f242432a8585856060015185815181106112ca576112ca6120c3565b6020026020010151866040015186815181106112e8576112e86120c3565b60209081029190910101516040516001600160e01b031960e087901b1681526001600160a01b0394851660048201529390921660248401526044830152606482015260a06084820152600060a482015260c401600060405180830381600087803b15801561135557600080fd5b505af1158015611369573d6000803e3d6000fd5b5050505080806113789061207c565b91505061122f565b600081516002811115611395576113956120ad565b1415611487576000816040015151116113f05760405162461bcd60e51b815260206004820152601b60248201527f4d61726b65743a207a65726f20616d6f756e74732e6c656e67746800000000006044820152606401610357565b60008160400151600081518110611409576114096120c3565b6020026020010151116114545760405162461bcd60e51b815260206004820152601360248201527213585c9ad95d0e881e995c9bc8185b5bdd5b9d606a1b6044820152606401610357565b611482816020015184848460400151600081518110611475576114756120c3565b6020026020010151611670565b505050565b60405162461bcd60e51b815260206004820152601c60248201527f4d61726b65743a20756e737570706f72746564206974656d54797065000000006044820152606401610357565b600054600160a01b900460ff1661151f5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610357565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6114827f0000000000000000000000000000000000000000000000000000000000000000848484611670565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a01b900460ff16156116355760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610357565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861154f3390565b6001600160a01b03831630141561169a576116956001600160a01b03851683836116af565b611147565b6111476001600160a01b038516848484611712565b6040516001600160a01b03831660248201526044810182905261148290849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261174a565b6040516001600160a01b03808516602483015283166044820152606481018290526111479085906323b872dd60e01b906084016116db565b600061179f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661181c9092919063ffffffff16565b80519091501561148257808060200190518101906117bd9190611ca3565b6114825760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610357565b606061182b8484600085611835565b90505b9392505050565b6060824710156118965760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610357565b6001600160a01b0385163b6118ed5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610357565b600080866001600160a01b031685876040516119099190611dc3565b60006040518083038185875af1925050503d8060008114611946576040519150601f19603f3d011682016040523d82523d6000602084013e61194b565b606091505b509150915061195b828286611966565b979650505050505050565b6060831561197557508161182e565b8251156119855782518084602001fd5b8160405162461bcd60e51b81526004016103579190611e77565b8280548282559060005260206000209081019282156119da579160200282015b828111156119da5782518255916020019190600101906119bf565b506119e69291506119ea565b5090565b5b808211156119e657600081556001016119eb565b80356001600160a01b0381168114611a1657600080fd5b919050565b600082601f830112611a2c57600080fd5b8135602067ffffffffffffffff821115611a4857611a486120d9565b8160051b611a57828201611f16565b838152828101908684018388018501891015611a7257600080fd5b600093505b85841015611a95578035835260019390930192918401918401611a77565b50979650505050505050565b600082601f830112611ab257600080fd5b813567ffffffffffffffff811115611acc57611acc6120d9565b611adf601f8201601f1916602001611f16565b818152846020838601011115611af457600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215611b2357600080fd5b61182e826119ff565b600080600080600060a08688031215611b4457600080fd5b611b4d866119ff565b9450611b5b602087016119ff565b9350604086013567ffffffffffffffff80821115611b7857600080fd5b611b8489838a01611a1b565b94506060880135915080821115611b9a57600080fd5b611ba689838a01611a1b565b93506080880135915080821115611bbc57600080fd5b50611bc988828901611aa1565b9150509295509295909350565b60008060008060808587031215611bec57600080fd5b611bf5856119ff565b9350611c03602086016119ff565b925060408501359150606085013567ffffffffffffffff811115611c2657600080fd5b611c3287828801611aa1565b91505092959194509250565b600080600080600060a08688031215611c5657600080fd5b611c5f866119ff565b9450611c6d602087016119ff565b93506040860135925060608601359150608086013567ffffffffffffffff811115611c9757600080fd5b611bc988828901611aa1565b600060208284031215611cb557600080fd5b8151801515811461182e57600080fd5b600060208284031215611cd757600080fd5b81356001600160e01b03198116811461182e57600080fd5b60008060408385031215611d0257600080fd5b823567ffffffffffffffff811115611d1957600080fd5b830160808186031215611d2b57600080fd5b946020939093013593505050565b600060208284031215611d4b57600080fd5b5035919050565b60008060408385031215611d6557600080fd5b50508035926020909101359150565b600081518084526020808501945080840160005b83811015611da457815187529582019590820190600101611d88565b509495945050505050565b60048110611dbf57611dbf6120ad565b9052565b60008251611dd5818460208701612050565b9190910192915050565b6001600160a01b038781168252868116602083015260c0604083015285516000919060038110611e1157611e116120ad565b60c084015260208701511660e083015260408601516080610100840152611e3c610140840182611d74565b9050606087015160bf1984830301610120850152611e5a8282611d74565b9250505084606083015283608083015261195b60a0830184611daf565b6020815260008251806020840152611e96816040850160208701612050565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601c908201527f4d61726b65743a20696e76616c6964206f666665722073746174757300000000604082015260600190565b604051601f8201601f1916810167ffffffffffffffff81118282101715611f3f57611f3f6120d9565b604052919050565b600082611f6457634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611f8357611f83612097565b500290565b600082821015611f9a57611f9a612097565b500390565b600060808236031215611fb157600080fd5b6040516080810167ffffffffffffffff8282108183111715611fd557611fd56120d9565b816040528435915060038210611fea57600080fd5b818352611ff9602086016119ff565b6020840152604085013591508082111561201257600080fd5b61201e36838701611a1b565b6040840152606085013591508082111561203757600080fd5b5061204436828601611a1b565b60608301525092915050565b60005b8381101561206b578181015183820152602001612053565b838111156111475750506000910152565b600060001982141561209057612090612097565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122012cedd8bb1f0ded176ffea79c674d8cf95d30d1c1df1c4dd3b84480991c3bf5c64736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063bc197c8111610071578063bc197c8114610293578063cc6bee54146102b2578063e1489191146102bb578063f23a6e61146102c4578063f2fde38b146102e357600080fd5b8063715018a61461023a5780638456cb59146102425780638a72ea6a1461024a5780638da5cb5b1461026f578063b3de019c1461028057600080fd5b80633f4ba83a116100f45780633f4ba83a146101bb57806340e58ee5146101c3578063454a2ab3146101d65780634ddd108a146101e95780635c975abb1461022857600080fd5b806301ffc9a7146101265780630be80f391461014e578063150b7a021461016357806317e66c351461019a575b600080fd5b610139610134366004611cc5565b6102f6565b60405190151581526020015b60405180910390f35b61016161015c366004611d39565b61032d565b005b610181610171366004611bd6565b630a85bd0160e11b949350505050565b6040516001600160e01b03199091168152602001610145565b6101ad6101a8366004611cef565b6103a5565b604051908152602001610145565b610161610602565b6101616101d1366004611d39565b610636565b6101616101e4366004611d39565b6108a0565b6102107f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610145565b600054600160a01b900460ff16610139565b610161610b42565b610161610b76565b61025d610258366004611d39565b610ba8565b60405161014596959493929190611ddf565b6000546001600160a01b0316610210565b61016161028e366004611d52565b610ce9565b6101816102a1366004611b2c565b63bc197c8160e01b95945050505050565b6101ad60025481565b6101ad60015481565b6101816102d2366004611c3e565b63f23a6e6160e01b95945050505050565b6101616102f1366004611b11565b610f82565b60006001600160e01b03198216630271189760e51b148061032757506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000546001600160a01b031633146103605760405162461bcd60e51b815260040161035790611eaa565b60405180910390fd5b600180549082905560408051838152602081018390527f9b8c4484ba5e4a0dde5339b45a03dd83281d6b1958617ee553dfbcd3532b0e2a910160405180910390a15050565b60008054600160a01b900460ff16156103f35760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610357565b600082116104385760405162461bcd60e51b81526020600482015260126024820152714d61726b65743a207a65726f20707269636560701b6044820152606401610357565b3361044c813061044787611f9f565b61101d565b60026000815461045b9061207c565b91829055506040805160c0810182526001600160a01b038416815260006020820152919350810161048b86611f9f565b81526020018481526020016001548152602001600160038111156104b1576104b16120ad565b9052600083815260036020908152604091829020835181546001600160a01b039182166001600160a01b0319918216178355928501516001808401805492909316919094161790559183015180516002808501805493949093849260ff1990911691908490811115610525576105256120ad565b021790555060208281015182546001600160a01b0390911661010002610100600160a81b031990911617825560408301518051610568926001850192019061199f565b506060820151805161058491600284019160209091019061199f565b505050606082015160058201556080820151600682015560a082015160078201805460ff191660018360038111156105be576105be6120ad565b0217905550506040516001600160a01b038316915083907f7757890bcab34d673dfca6b71df1b57f75a2fe4231d6e8de726caf534ab1fdd690600090a35092915050565b6000546001600160a01b0316331461062c5760405162461bcd60e51b815260040161035790611eaa565b6106346114cf565b565b6000818152600360209081526040808320815160c08101835281546001600160a01b039081168252600183015416938101939093528151608081018352600280830180543397969586019392839160ff1690811115610697576106976120ad565b60028111156106a8576106a86120ad565b8152815461010090046001600160a01b0316602080830191909152600183018054604080518285028101850182528281529401939283018282801561070c57602002820191906000526020600020905b8154815260200190600101908083116106f8575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561076457602002820191906000526020600020905b815481526020019060010190808311610750575b5050509190925250505081526005820154602082015260068201546040820152600782015460609091019060ff1660038111156107a3576107a36120ad565b60038111156107b4576107b46120ad565b905250905060018160a0015160038111156107d1576107d16120ad565b146107ee5760405162461bcd60e51b815260040161035790611edf565b816001600160a01b031681600001516001600160a01b0316146108495760405162461bcd60e51b815260206004820152601360248201527226b0b935b2ba1d103737ba1031b932b0ba37b960691b6044820152606401610357565b6108583083836040015161101d565b600083815260036020526040808220600701805460ff191660021790555184917fc41d93b8bfbf9fd7cf5bfe271fd649ab6a6fec0ea101c23b82a2a28eca2533a991a2505050565b6000818152600360209081526040808320815160c08101835281546001600160a01b0390811682526001830154169381019390935281516080810183526002808301805493948601939091839160ff1690811115610900576109006120ad565b6002811115610911576109116120ad565b8152815461010090046001600160a01b0316602080830191909152600183018054604080518285028101850182528281529401939283018282801561097557602002820191906000526020600020905b815481526020019060010190808311610961575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156109cd57602002820191906000526020600020905b8154815260200190600101908083116109b9575b5050509190925250505081526005820154602082015260068201546040820152600782015460609091019060ff166003811115610a0c57610a0c6120ad565b6003811115610a1d57610a1d6120ad565b905250905060018160a001516003811115610a3a57610a3a6120ad565b14610a575760405162461bcd60e51b815260040161035790611edf565b60808101516060820151339160009161271091610a7391611f69565b610a7d9190611f47565b9050610a9b82610a956000546001600160a01b031690565b8361156c565b610ab9828460000151838660600151610ab49190611f88565b61156c565b610ac83083856040015161101d565b6000848152600360208181526040928390206001810180546001600160a01b0319166001600160a01b0388169081179091556007909101805460ff19169093179092558251918252915186927fa4c87919f856d464ae137e2cb78e129ea90b599d0661f1755dbd7d733af7925a928290030190a250505050565b6000546001600160a01b03163314610b6c5760405162461bcd60e51b815260040161035790611eaa565b6106346000611598565b6000546001600160a01b03163314610ba05760405162461bcd60e51b815260040161035790611eaa565b6106346115e8565b6003602052600090815260409081902080546001820154835160808101909452600280840180546001600160a01b03948516969390941694939091839160ff1690811115610bf857610bf86120ad565b6002811115610c0957610c096120ad565b8152815461010090046001600160a01b03166020808301919091526001830180546040805182850281018501825282815294019392830182828015610c6d57602002820191906000526020600020905b815481526020019060010190808311610c59575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610cc557602002820191906000526020600020905b815481526020019060010190808311610cb1575b50505091909252505050600582015460068301546007909301549192909160ff1686565b60008111610d2e5760405162461bcd60e51b81526020600482015260126024820152714d61726b65743a207a65726f20707269636560701b6044820152606401610357565b6000828152600360209081526040808320815160c08101835281546001600160a01b039081168252600183015416938101939093528151608081018352600280830180543397969586019392839160ff1690811115610d8f57610d8f6120ad565b6002811115610da057610da06120ad565b8152815461010090046001600160a01b03166020808301919091526001830180546040805182850281018501825282815294019392830182828015610e0457602002820191906000526020600020905b815481526020019060010190808311610df0575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610e5c57602002820191906000526020600020905b815481526020019060010190808311610e48575b5050509190925250505081526005820154602082015260068201546040820152600782015460609091019060ff166003811115610e9b57610e9b6120ad565b6003811115610eac57610eac6120ad565b905250905060018160a001516003811115610ec957610ec96120ad565b14610ee65760405162461bcd60e51b815260040161035790611edf565b816001600160a01b031681600001516001600160a01b031614610f415760405162461bcd60e51b815260206004820152601360248201527226b0b935b2ba1d103737ba1031b932b0ba37b960691b6044820152606401610357565b6000848152600360205260408082206005018590555185917fa6dc15bdb68da224c66db4b3838d9a2b205138e8cff6774e57d0af91e196d62291a250505050565b6000546001600160a01b03163314610fac5760405162461bcd60e51b815260040161035790611eaa565b6001600160a01b0381166110115760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610357565b61101a81611598565b50565b600181516002811115611032576110326120ad565b141561114d576000816060015151116110875760405162461bcd60e51b815260206004820152601760248201527609ac2e4d6cae87440f4cae4de40d2c8e65cd8cadccee8d604b1b6044820152606401610357565b60005b8160600151518110156111475781602001516001600160a01b03166342842e0e8585856060015185815181106110c2576110c26120c3565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801561111c57600080fd5b505af1158015611130573d6000803e3d6000fd5b50505050808061113f9061207c565b91505061108a565b50505050565b600281516002811115611162576111626120ad565b1415611380576000816060015151116111b75760405162461bcd60e51b815260206004820152601760248201527609ac2e4d6cae87440f4cae4de40d2c8e65cd8cadccee8d604b1b6044820152606401610357565b8060400151518160600151511461122c5760405162461bcd60e51b815260206004820152603360248201527f4d61726b65743a206964732e6c656e67746820616e6420616d6f756e74732e6c604482015272195b99dd1a08185c99481b9bdd08195c5d585b606a1b6064820152608401610357565b60005b81606001515181101561114757600082604001518281518110611254576112546120c3565b60200260200101511161129f5760405162461bcd60e51b815260206004820152601360248201527213585c9ad95d0e881e995c9bc8185b5bdd5b9d606a1b6044820152606401610357565b81602001516001600160a01b031663f242432a8585856060015185815181106112ca576112ca6120c3565b6020026020010151866040015186815181106112e8576112e86120c3565b60209081029190910101516040516001600160e01b031960e087901b1681526001600160a01b0394851660048201529390921660248401526044830152606482015260a06084820152600060a482015260c401600060405180830381600087803b15801561135557600080fd5b505af1158015611369573d6000803e3d6000fd5b5050505080806113789061207c565b91505061122f565b600081516002811115611395576113956120ad565b1415611487576000816040015151116113f05760405162461bcd60e51b815260206004820152601b60248201527f4d61726b65743a207a65726f20616d6f756e74732e6c656e67746800000000006044820152606401610357565b60008160400151600081518110611409576114096120c3565b6020026020010151116114545760405162461bcd60e51b815260206004820152601360248201527213585c9ad95d0e881e995c9bc8185b5bdd5b9d606a1b6044820152606401610357565b611482816020015184848460400151600081518110611475576114756120c3565b6020026020010151611670565b505050565b60405162461bcd60e51b815260206004820152601c60248201527f4d61726b65743a20756e737570706f72746564206974656d54797065000000006044820152606401610357565b600054600160a01b900460ff1661151f5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610357565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6114827f0000000000000000000000000000000000000000000000000000000000000000848484611670565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a01b900460ff16156116355760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610357565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861154f3390565b6001600160a01b03831630141561169a576116956001600160a01b03851683836116af565b611147565b6111476001600160a01b038516848484611712565b6040516001600160a01b03831660248201526044810182905261148290849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261174a565b6040516001600160a01b03808516602483015283166044820152606481018290526111479085906323b872dd60e01b906084016116db565b600061179f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661181c9092919063ffffffff16565b80519091501561148257808060200190518101906117bd9190611ca3565b6114825760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610357565b606061182b8484600085611835565b90505b9392505050565b6060824710156118965760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610357565b6001600160a01b0385163b6118ed5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610357565b600080866001600160a01b031685876040516119099190611dc3565b60006040518083038185875af1925050503d8060008114611946576040519150601f19603f3d011682016040523d82523d6000602084013e61194b565b606091505b509150915061195b828286611966565b979650505050505050565b6060831561197557508161182e565b8251156119855782518084602001fd5b8160405162461bcd60e51b81526004016103579190611e77565b8280548282559060005260206000209081019282156119da579160200282015b828111156119da5782518255916020019190600101906119bf565b506119e69291506119ea565b5090565b5b808211156119e657600081556001016119eb565b80356001600160a01b0381168114611a1657600080fd5b919050565b600082601f830112611a2c57600080fd5b8135602067ffffffffffffffff821115611a4857611a486120d9565b8160051b611a57828201611f16565b838152828101908684018388018501891015611a7257600080fd5b600093505b85841015611a95578035835260019390930192918401918401611a77565b50979650505050505050565b600082601f830112611ab257600080fd5b813567ffffffffffffffff811115611acc57611acc6120d9565b611adf601f8201601f1916602001611f16565b818152846020838601011115611af457600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215611b2357600080fd5b61182e826119ff565b600080600080600060a08688031215611b4457600080fd5b611b4d866119ff565b9450611b5b602087016119ff565b9350604086013567ffffffffffffffff80821115611b7857600080fd5b611b8489838a01611a1b565b94506060880135915080821115611b9a57600080fd5b611ba689838a01611a1b565b93506080880135915080821115611bbc57600080fd5b50611bc988828901611aa1565b9150509295509295909350565b60008060008060808587031215611bec57600080fd5b611bf5856119ff565b9350611c03602086016119ff565b925060408501359150606085013567ffffffffffffffff811115611c2657600080fd5b611c3287828801611aa1565b91505092959194509250565b600080600080600060a08688031215611c5657600080fd5b611c5f866119ff565b9450611c6d602087016119ff565b93506040860135925060608601359150608086013567ffffffffffffffff811115611c9757600080fd5b611bc988828901611aa1565b600060208284031215611cb557600080fd5b8151801515811461182e57600080fd5b600060208284031215611cd757600080fd5b81356001600160e01b03198116811461182e57600080fd5b60008060408385031215611d0257600080fd5b823567ffffffffffffffff811115611d1957600080fd5b830160808186031215611d2b57600080fd5b946020939093013593505050565b600060208284031215611d4b57600080fd5b5035919050565b60008060408385031215611d6557600080fd5b50508035926020909101359150565b600081518084526020808501945080840160005b83811015611da457815187529582019590820190600101611d88565b509495945050505050565b60048110611dbf57611dbf6120ad565b9052565b60008251611dd5818460208701612050565b9190910192915050565b6001600160a01b038781168252868116602083015260c0604083015285516000919060038110611e1157611e116120ad565b60c084015260208701511660e083015260408601516080610100840152611e3c610140840182611d74565b9050606087015160bf1984830301610120850152611e5a8282611d74565b9250505084606083015283608083015261195b60a0830184611daf565b6020815260008251806020840152611e96816040850160208701612050565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601c908201527f4d61726b65743a20696e76616c6964206f666665722073746174757300000000604082015260600190565b604051601f8201601f1916810167ffffffffffffffff81118282101715611f3f57611f3f6120d9565b604052919050565b600082611f6457634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611f8357611f83612097565b500290565b600082821015611f9a57611f9a612097565b500390565b600060808236031215611fb157600080fd5b6040516080810167ffffffffffffffff8282108183111715611fd557611fd56120d9565b816040528435915060038210611fea57600080fd5b818352611ff9602086016119ff565b6020840152604085013591508082111561201257600080fd5b61201e36838701611a1b565b6040840152606085013591508082111561203757600080fd5b5061204436828601611a1b565b60608301525092915050565b60005b8381101561206b578181015183820152602001612053565b838111156111475750506000910152565b600060001982141561209057612090612097565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122012cedd8bb1f0ded176ffea79c674d8cf95d30d1c1df1c4dd3b84480991c3bf5c64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1568,
        "contract": "contracts/FixedPriceMarket.sol:FixedPriceMarket",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2905,
        "contract": "contracts/FixedPriceMarket.sol:FixedPriceMarket",
        "label": "_paused",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 11141,
        "contract": "contracts/FixedPriceMarket.sol:FixedPriceMarket",
        "label": "commission",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 10017,
        "contract": "contracts/FixedPriceMarket.sol:FixedPriceMarket",
        "label": "numOffers",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 10022,
        "contract": "contracts/FixedPriceMarket.sol:FixedPriceMarket",
        "label": "offers",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(Offer)9995_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(ItemType)11112": {
        "encoding": "inplace",
        "label": "enum ItemType",
        "numberOfBytes": "1"
      },
      "t_enum(OfferStatus)9980": {
        "encoding": "inplace",
        "label": "enum FixedPriceMarket.OfferStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_struct(Offer)9995_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct FixedPriceMarket.Offer)",
        "numberOfBytes": "32",
        "value": "t_struct(Offer)9995_storage"
      },
      "t_struct(Item)11124_storage": {
        "encoding": "inplace",
        "label": "struct Item",
        "members": [
          {
            "astId": 11115,
            "contract": "contracts/FixedPriceMarket.sol:FixedPriceMarket",
            "label": "itemType",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(ItemType)11112"
          },
          {
            "astId": 11117,
            "contract": "contracts/FixedPriceMarket.sol:FixedPriceMarket",
            "label": "addr",
            "offset": 1,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 11120,
            "contract": "contracts/FixedPriceMarket.sol:FixedPriceMarket",
            "label": "amounts",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 11123,
            "contract": "contracts/FixedPriceMarket.sol:FixedPriceMarket",
            "label": "ids",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)dyn_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Offer)9995_storage": {
        "encoding": "inplace",
        "label": "struct FixedPriceMarket.Offer",
        "members": [
          {
            "astId": 9982,
            "contract": "contracts/FixedPriceMarket.sol:FixedPriceMarket",
            "label": "creator",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 9984,
            "contract": "contracts/FixedPriceMarket.sol:FixedPriceMarket",
            "label": "bidder",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 9987,
            "contract": "contracts/FixedPriceMarket.sol:FixedPriceMarket",
            "label": "item",
            "offset": 0,
            "slot": "2",
            "type": "t_struct(Item)11124_storage"
          },
          {
            "astId": 9989,
            "contract": "contracts/FixedPriceMarket.sol:FixedPriceMarket",
            "label": "price",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 9991,
            "contract": "contracts/FixedPriceMarket.sol:FixedPriceMarket",
            "label": "commission",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 9994,
            "contract": "contracts/FixedPriceMarket.sol:FixedPriceMarket",
            "label": "status",
            "offset": 0,
            "slot": "7",
            "type": "t_enum(OfferStatus)9980"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
